{"version":3,"sources":["components/Navbar.jsx","services/fakeMovieService.js","services/fakeGenreService.js","common/Pagination.jsx","common/ListGroup.jsx","common/Like.jsx","common/TableHeader.jsx","common/TableBody.jsx","common/Table.jsx","common/MoviesTable.jsx","components/MovieList.jsx","helpers/Paginate.js","components/MovieForm.jsx","components/Customers.jsx","components/Rental.jsx","components/NotFound.jsx","common/Input.jsx","components/LoginForm.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","state","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","movies","_id","title","genre","name","numberInStock","dailyRentalRate","publishDate","like","genres","Pagination","this","props","itemsCount","pageSize","currentPage","pagesCount","Math","ceil","pages","_","range","map","page","key","href","onClick","onPageChange","ListGroup","lists","valueProperty","textProperty","selectedGenre","onGenreChange","list","defaultProps","Like","heart","movie","movieLiked","TableHeader","sortMovies","path","sortColumn","order","onSort","renderIcon","column","columns","label","TableBody","renderCell","item","content","get","createKey","data","Table","MoviesTable","onLike","onDelete","Movies","handleDelete","filter","setState","handleLikeMovie","new_movie","index","indexOf","handlePageChange","handleGenreChange","handleSort","g","allMovies","filteredMovies","m","items","pageNumber","startIndex","slice","take","value","Paginate","orderBy","totalCount","length","count","pageData","style","fontWeight","textAlign","role","padding","MovieForm","Customers","Rental","NotFound","Input","htmlFor","onChange","defaultValue","propType","PropTypes","string","isRequired","func","LoginForm","account","username","password","errors","schema","Joi","required","validate","error","abortEarly","details","detail","message","handleSubmit","e","preventDefault","console","log","handleChange","currentTarget","onSubmit","marginTop","App","Fragment","component","MovieList","from","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.33c31d5b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link, NavLink } from 'react-router-dom';\n\nclass Navbar extends Component {\n    state = {  }\n    render() { \n        return ( \n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <Link className=\"navbar-brand\" to=\"/\">My App</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <NavLink to=\"/movies\" className=\"nav-link\" >Movies</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/customers\" className=\"nav-link\">Customer</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/rentals\" className=\"nav-link\">Rentals</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/login\" className=\"nav-link\">Login</NavLink>\n                        </li>\n                    </ul>\n                </div>\n            </nav>            \n         );\n    }\n}\n \nexport default Navbar;","//import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    like: 0\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n    like: 0\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n    like: 0\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    like: 0\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    like: 0\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    like: 0\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n    like: 0\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n    like: 0\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    like: 0\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import React, { Component } from 'react';\nimport _ from 'lodash'\nimport PropTypes from 'prop-types';\n\nclass Pagination extends Component {\n    state = {  }\n    render() { \n        const {itemsCount, pageSize, currentPage} = this.props;\n        const pagesCount = Math.ceil(itemsCount/pageSize);\n        if(pagesCount <= 1) return null;\n        //if result is greater then 1\n        const pages = _.range(1, pagesCount+1)\n\n        return ( \n           <ul className=\"pagination\">\n               { pages.map( page => <li key={ page } className={ (pageSize === currentPage) ? \"page-item active\" : \"page-item\" }><a className=\"page-link\" href=\"#\" onClick={ () => this.props.onPageChange(page) }>{page}</a></li> )}\n           </ul>\n         );\n    }\n}\n\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n}\n \nexport default Pagination;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ListGroup extends Component {\n    render() { \n        let { genres:lists, valueProperty, textProperty, selectedGenre, onGenreChange } = this.props;\n        return ( \n            <ul className=\"list-group\">\n                { lists.map( list => <li className={ ( list === selectedGenre ) ? 'list-group-item active' : 'list-group-item'} key={ list[valueProperty] } onClick={ () => onGenreChange(list) } >{ list[textProperty] }</li>)}\n            </ul> \n        );\n    }\n}\n\n//Assigning default value to props\nListGroup.defaultProps = {\n    valueProperty: '_id',\n    textProperty: 'name'\n}\n\n//validating the props\nListGroup.propTypes = {\n    genres: PropTypes.array.isRequired,\n    onGenreChange: PropTypes.func.isRequired\n}\n \nexport default ListGroup;","import React, { Component } from 'react';\nclass Like extends Component {\n    state = {  }\n    render() { \n        let heart = \"fa fa-heart\";\n        if(!this.props.movie.like) heart += '-o';\n        return ( <i className={ heart } onClick={() => this.props.movieLiked(this.props.movie)}></i> );\n    }\n}\n \nexport default Like;","import React, { Component } from 'react';\nclass TableHeader extends Component {\n    sortMovies = (path) => {\n        //for handling reverse of the ordering first duplicate the object\n        //check what the previous path is\n        const sortColumn = {...this.props.sortColumn};\n        if(sortColumn.path === path){\n            sortColumn.order = (sortColumn.order === 'asc') ? 'desc' : 'asc';\n        }else{\n            sortColumn.path = path;\n            sortColumn.order = 'asc';\n        }\n\n        this.props.onSort(sortColumn);\n    }\n\n    renderIcon = (column) => {\n        const { sortColumn } = this.props;\n        if(column.path !== sortColumn.path) return null;\n\n        if(sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>;\n        return <i className=\"fa fa-sort-desc\"></i>\n    }\n\n    render() { \n        return ( <thead>\n            <tr>\n                { this.props.columns.map( column => <th key={ column.path || column.key } onClick={ () => this.sortMovies(column.path)}>\n                                                        { column.label }\n                                                        { this.renderIcon(column)}\n                                                    </th>)}\n            </tr>\n        </thead> );\n    }\n}\n \nexport default TableHeader;","import React, { Component } from 'react';\nimport _ from 'lodash';\nclass TableBody extends Component {\n    renderCell = (item, column) => {\n        if(column.content) return column.content(item);\n        //else\n        return _.get(item, column.path);\n    }\n\n    createKey = (item, column) => {\n        return item._id + (column.key || column.path)\n    }\n\n    render() { \n        let { data, columns } = this.props;\n        return (<tbody>\n                   { data.map( item => <tr key={ item._id }>\n                                            { columns.map( column => <td key={ this.createKey(item, column) }> { this.renderCell(item, column)} </td>)}\n                                        </tr>) \n                    }\n                </tbody>\n            );\n    }\n}\n \nexport default TableBody;","import React, { Component } from 'react';\nimport TableHeader from '../common/TableHeader';\nimport TableBody from '../common/TableBody';\n\nclass Table extends Component {\n    state = {  }\n    render() { \n        let { columns, data, onSort, sortColumn } = this.props;\n        return ( \n        <table className=\"table\">\n            <TableHeader \n                columns={ columns } \n                onSort={ onSort } \n                sortColumn={ sortColumn }\n            />\n\n            <TableBody\n                columns={ columns }\n                data={ data }\n            />\n        </table> );\n    }\n}\n \nexport default Table;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Like from '../common/Like';\nimport Table from '../common/Table';\n\nclass MoviesTable extends Component {\n    columns = [\n        {path: 'title', label: 'Title', content: (movie) => <Link to={`/movies/${movie._id}`}>{ movie.title }</Link>},\n        {path: 'genre.name', label:'Genre'},\n        {path: 'numberInStock', label:\"Number in stock\"},\n        {key: 'like', content: (movie) => <Like movie={movie} movieLiked={ () => this.props.onLike(movie)}/>},\n        {key: 'action', content: (movie) => <button className=\"btn btn-xs btn-danger\" onClick={ () => this.props.onDelete(movie._id)}>Delete</button>}\n    ]\n    render() { \n        let { movies, onSort, sortColumn } = this.props\n        return ( \n            <Table columns={ this.columns } data={ movies } onSort={ onSort } sortColumn={ sortColumn }/>\n         );\n    }\n}\n \nexport default MoviesTable;","import React, { Component } from 'react';\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from '../services/fakeGenreService';\nimport Pagination from \"../common/Pagination\"\nimport {Paginate} from '../helpers/Paginate'\nimport ListGroup from '../common/ListGroup'\nimport MoviesTable from '../common/MoviesTable'\nimport _ from 'lodash'\n\nclass Movies extends Component {\n    state = { \n        movies: [],\n        genres: [],\n        pageSize: 4,\n        sortColumn: {path: 'title', order: 'asc'},\n        selectedGenre: '',\n        currentPage: 1\n     }\n\n    componentDidMount(){\n        const genres = [ {_id: '', name: 'All Genre'}, ...getGenres()]\n        this.setState({\n            movies: getMovies(),\n            genres: genres,\n        });\n    } \n\n    handleDelete = (id) => {\n        let movies = this.state.movies.filter( movie => movie._id !== id)\n        this.setState({\n            movies: movies\n        });\n    }\n\n    handleLikeMovie = (movie) => {\n        let movies = [...this.state.movies];\n        let new_movie = {...movie};\n        const index = movies.indexOf(movie);\n        movies[index] = new_movie;\n        movies[index].like = !(movies[index].like);\n        this.setState({\n            movies: movies\n        })\n    }\n\n    handlePageChange = (page) => {\n        this.setState({\n            currentPage: page\n        })\n    }\n\n    handleGenreChange = (genre) => {\n        this.setState({\n            selectedGenre: genre,\n            currentPage: 1\n        })\n    }\n\n    handleSort = (sortColumn) => {\n        this.setState({\n            sortColumn\n        })\n    }\n\n    pageData() {\n        let {pageSize, currentPage, movies:allMovies, selectedGenre, sortColumn} = this.state\n\n        //if any genre selected then filter the movie according to that genre\n        let filteredMovies = selectedGenre && selectedGenre._id \n        ? allMovies.filter( m => m.genre._id === selectedGenre._id ) \n        : allMovies;\n        //after filter sort the movies\n        const sortedMovies = _.orderBy(filteredMovies, [sortColumn.path], [sortColumn.order])\n\n        const movies = Paginate(sortedMovies, currentPage, pageSize);\n\n        return {\n            data: movies,\n            totalCount: allMovies.length\n        }\n    }\n\n    render() { \n        //some object destructuring\n        let {length: count} = this.state.movies\n        let {pageSize, currentPage, sortColumn} = this.state\n        \n        let {totalCount, data: movies} = this.pageData();\n\n        if(count === 0)\n            return <p style={{fontWeight: 'bold', textAlign: 'center'}}>No movie found</p>    \n        return (     \n        <main role=\"main\" className=\"container\" style={{padding: 23}}>\n            <div className=\"row\">\n                <div className=\"col-2\">\n                    <ListGroup \n                        genres={ this.state.genres } \n                        selectedGenre={ this.state.selectedGenre } \n                        onGenreChange={ this.handleGenreChange }\n                    />\n                </div>\n\n                <div className=\"col\">\n                    <p style={{fontWeight: 'bold', textAlign: 'center'}}>{ totalCount } movies found </p>\n                        \n                        <MoviesTable \n                            movies={ movies } \n                            sortColumn={ sortColumn }\n                            onLike={ this.handleLikeMovie } \n                            onDelete={ this.handleDelete }\n                            onSort={ this.handleSort}\n                        />\n\n                        <Pagination \n                            itemsCount={ totalCount } \n                            pageSize={ pageSize } \n                            currentPage={ currentPage } \n                            onPageChange={ this.handlePageChange }\n                        />\n                </div>\n            </div>\n           \n        </main>\n      );\n    }\n}\n \nexport default Movies;","import _ from 'lodash';\nexport function Paginate(items, pageNumber, pageSize){\n    const startIndex = (pageNumber - 1) * pageSize;\n    //first make items the object of the lodash\n    return _(items)\n            .slice(startIndex)\n            .take(pageSize)\n            .value();\n}","import React, { Component } from 'react';\nclass MovieForm extends Component {\n    render() { \n        return ( \n            <h1>Movie Form</h1>\n         );\n    }\n}\n \nexport default MovieForm;","import React, { Component } from 'react';\nclass Customers extends Component {\n    state = {  }\n    render() { \n        return ( <h1>Hi, customers</h1> );\n    }\n}\n \nexport default Customers;","import React, { Component } from 'react';\nclass Rental extends Component {\n    state = {  }\n    render() { \n        return ( <h1>Hi, Rentals</h1> );\n    }\n}\n \nexport default Rental;","import React, { Component } from 'react';\nclass NotFound extends Component {\n    render() { \n        return ( <h2>No result found.</h2> );\n    }\n}\n \nexport default NotFound;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Input = (props) => {\n    return ( \n        <div className=\"from-group\">\n            <label htmlFor={ props.id } className=\"label\">{ props.label }</label>\n            <input className=\"form-control\" id={ props.id } type={ props.type } name={ props.name } onChange={ props.onChange } value={ props.value }/>\n        </div>\n     );\n}\n\nInput.defaultValue = {\n    type: 'text'\n}\n\nInput.propType = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired\n}\n\nexport default Input;","import React, { Component } from 'react';\nimport Input from '../common/Input';\nimport Joi from 'joi';\n\nclass LoginForm extends Component {\n    state = { \n        account: {\n            username: '',\n            password: ''\n        },\n        errors: {}\n     }\n\n    //declaring schema for validation\n    schema = {\n        username: Joi.string().required(),\n        password: Joi.string().required()\n    }\n\n    validate = () => {\n        const {error} = Joi.validate(this.state.account, this.schema, { abortEarly: false });\n        //check if no error exists then return null\n        if(!error) return null; \n\n        //create a new errors object for storing errors\n        const errors = {};\n        error.details.map( detail => {\n            return errors[detail.path[0]] = detail.message;\n        });\n        \n        return errors;\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let errors = this.validate();\n        if(!errors){\n            this.setState({\n                errors: errors\n            });\n            console.log(this.state.errors);\n        }else{\n            console.log('submitted');\n        }\n        \n    }\n\n    handleChange = (e) => {\n        let account = {...this.state.account}\n\n        account[e.currentTarget.name] = e.currentTarget.value;\n        this.setState({\n            account: account\n        })\n    }\n\n    render() { \n        return ( \n            <div className=\"row\">\n                <div className=\"col-md-4\"></div>\n                <div className=\"col-md-4\">\n                    <h3>Login</h3>\n                    <form onSubmit={this.handleSubmit}>\n                        <Input label='Username' id='username' name='username' onChange={ this.handleChange } value={ this.state.account.username } />\n\n                        <Input label=\"Password\" id=\"password\" type=\"password\" name=\"password\" onChange={ this.handleChange } value={ this.state.account.password } />\n\n                        <button className=\"btn btn-primary btn-block\" style={{ marginTop: 10}}>Login</button>\n                    </form>\n                </div> \n            </div>\n         );\n    }\n}\n \nexport default LoginForm;","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport MovieList from './components/MovieList'\nimport MovieForm from './components/MovieForm';\nimport Customers from './components/Customers';\nimport Rental from './components/Rental';\nimport NotFound from './components/NotFound';\nimport LoginForm from './components/LoginForm';\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n      <React.Fragment>\n        <Navbar />\n        <Switch>\n          <Route path=\"/movies/:id\" component={ MovieForm }></Route>\n          <Route path=\"/movies\" component={ MovieList }></Route>\n          <Route path=\"/customers\" component={ Customers}></Route>\n          <Route path=\"/rentals\" component={ Rental }></Route>\n          <Route path=\"/not-found\" component={ NotFound}></Route>\n          <Route path=\"/login\" component={ LoginForm }></Route>\n          <Redirect from=\"/\" exact to=\"movies\"></Redirect>\n          <Redirect to=\"/not-found\"></Redirect>\n        </Switch>\n      </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}