{"ast":null,"code":"'use strict'; // Load modules\n\nvar _defineProperty = require(\"/home/coeus/Desktop/React/movie-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/home/coeus/Desktop/React/movie-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/home/coeus/Desktop/React/movie-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/coeus/Desktop/React/movie-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _assertThisInitialized = require(\"/home/coeus/Desktop/React/movie-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/home/coeus/Desktop/React/movie-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _toConsumableArray = require(\"/home/coeus/Desktop/React/movie-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar Hoek = require('hoek');\n\nvar Any = require('./types/any');\n\nvar Cast = require('./cast');\n\nvar Errors = require('./errors');\n\nvar Lazy = require('./types/lazy');\n\nvar Ref = require('./ref');\n\nvar Settings = require('./types/any/settings'); // Declare internals\n\n\nvar internals = {\n  alternatives: require('./types/alternatives'),\n  array: require('./types/array'),\n  boolean: require('./types/boolean'),\n  binary: require('./types/binary'),\n  date: require('./types/date'),\n  func: require('./types/func'),\n  number: require('./types/number'),\n  object: require('./types/object'),\n  string: require('./types/string'),\n  symbol: require('./types/symbol')\n};\n\ninternals.callWithDefaults = function (schema, args) {\n  var _schema;\n\n  Hoek.assert(this, 'Must be invoked on a Joi instance.');\n\n  if (this._defaults) {\n    schema = this._defaults(schema);\n  }\n\n  schema._currentJoi = this;\n  return (_schema = schema)._init.apply(_schema, _toConsumableArray(args));\n};\n\ninternals.root = function () {\n  var any = new Any();\n  var root = any.clone();\n  Any.prototype._currentJoi = root;\n  root._currentJoi = root;\n  root._binds = new Set(['any', 'alternatives', 'alt', 'array', 'boolean', 'binary', 'date', 'func', 'number', 'object', 'string', 'symbol', 'validate', 'describe', 'compile', 'assert', 'attempt', 'lazy', 'defaults', 'extend', 'allow', 'valid', 'only', 'equal', 'invalid', 'disallow', 'not', 'required', 'exist', 'optional', 'forbidden', 'strip', 'when', 'empty', 'default']);\n\n  root.any = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    Hoek.assert(args.length === 0, 'Joi.any() does not allow arguments.');\n    return internals.callWithDefaults.call(this, any, args);\n  };\n\n  root.alternatives = root.alt = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return internals.callWithDefaults.call(this, internals.alternatives, args);\n  };\n\n  root.array = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    Hoek.assert(args.length === 0, 'Joi.array() does not allow arguments.');\n    return internals.callWithDefaults.call(this, internals.array, args);\n  };\n\n  root.boolean = root.bool = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    Hoek.assert(args.length === 0, 'Joi.boolean() does not allow arguments.');\n    return internals.callWithDefaults.call(this, internals.boolean, args);\n  };\n\n  root.binary = function () {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    Hoek.assert(args.length === 0, 'Joi.binary() does not allow arguments.');\n    return internals.callWithDefaults.call(this, internals.binary, args);\n  };\n\n  root.date = function () {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    Hoek.assert(args.length === 0, 'Joi.date() does not allow arguments.');\n    return internals.callWithDefaults.call(this, internals.date, args);\n  };\n\n  root.func = function () {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    Hoek.assert(args.length === 0, 'Joi.func() does not allow arguments.');\n    return internals.callWithDefaults.call(this, internals.func, args);\n  };\n\n  root.number = function () {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    Hoek.assert(args.length === 0, 'Joi.number() does not allow arguments.');\n    return internals.callWithDefaults.call(this, internals.number, args);\n  };\n\n  root.object = function () {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    return internals.callWithDefaults.call(this, internals.object, args);\n  };\n\n  root.string = function () {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    Hoek.assert(args.length === 0, 'Joi.string() does not allow arguments.');\n    return internals.callWithDefaults.call(this, internals.string, args);\n  };\n\n  root.symbol = function () {\n    for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n      args[_key11] = arguments[_key11];\n    }\n\n    Hoek.assert(args.length === 0, 'Joi.symbol() does not allow arguments.');\n    return internals.callWithDefaults.call(this, internals.symbol, args);\n  };\n\n  root.ref = function () {\n    return Ref.create.apply(Ref, arguments);\n  };\n\n  root.isRef = function (ref) {\n    return Ref.isRef(ref);\n  };\n\n  root.validate = function (value)\n  /*, [schema], [options], callback */\n  {\n    var _ref;\n\n    var last = (_ref = (arguments.length <= 1 ? 0 : arguments.length - 1) - 1 + 1, _ref < 1 || arguments.length <= _ref ? undefined : arguments[_ref]);\n    var callback = typeof last === 'function' ? last : null;\n    var count = (arguments.length <= 1 ? 0 : arguments.length - 1) - (callback ? 1 : 0);\n\n    if (count === 0) {\n      return any.validate(value, callback);\n    }\n\n    var options = count === 2 ? arguments.length <= 2 ? undefined : arguments[2] : undefined;\n    var schema = this.compile(arguments.length <= 1 ? undefined : arguments[1]);\n    return schema._validateWithOptions(value, options, callback);\n  };\n\n  root.describe = function () {\n    var schema = arguments.length ? this.compile(arguments.length <= 0 ? undefined : arguments[0]) : any;\n    return schema.describe();\n  };\n\n  root.compile = function (schema) {\n    try {\n      return Cast.schema(this, schema);\n    } catch (err) {\n      if (err.hasOwnProperty('path')) {\n        err.message = err.message + '(' + err.path + ')';\n      }\n\n      throw err;\n    }\n  };\n\n  root.assert = function (value, schema, message) {\n    this.attempt(value, schema, message);\n  };\n\n  root.attempt = function (value, schema, message) {\n    var result = this.validate(value, schema);\n    var error = result.error;\n\n    if (error) {\n      if (!message) {\n        if (typeof error.annotate === 'function') {\n          error.message = error.annotate();\n        }\n\n        throw error;\n      }\n\n      if (!(message instanceof Error)) {\n        if (typeof error.annotate === 'function') {\n          error.message = \"\".concat(message, \" \").concat(error.annotate());\n        }\n\n        throw error;\n      }\n\n      throw message;\n    }\n\n    return result.value;\n  };\n\n  root.reach = function (schema, path) {\n    Hoek.assert(schema && schema instanceof Any, 'you must provide a joi schema');\n    Hoek.assert(Array.isArray(path) || typeof path === 'string', 'path must be a string or an array of strings');\n\n    var reach = function reach(sourceSchema, schemaPath) {\n      if (!schemaPath.length) {\n        return sourceSchema;\n      }\n\n      var children = sourceSchema._inner.children;\n\n      if (!children) {\n        return;\n      }\n\n      var key = schemaPath.shift();\n\n      for (var i = 0; i < children.length; ++i) {\n        var child = children[i];\n\n        if (child.key === key) {\n          return reach(child.schema, schemaPath);\n        }\n      }\n    };\n\n    var schemaPath = typeof path === 'string' ? path ? path.split('.') : [] : path.slice();\n    return reach(schema, schemaPath);\n  };\n\n  root.lazy = function () {\n    for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n      args[_key12] = arguments[_key12];\n    }\n\n    return internals.callWithDefaults.call(this, Lazy, args);\n  };\n\n  root.defaults = function (fn) {\n    var _this = this;\n\n    Hoek.assert(typeof fn === 'function', 'Defaults must be a function');\n    var joi = Object.create(this.any());\n    joi = fn(joi);\n    Hoek.assert(joi && joi instanceof this.constructor, 'defaults() must return a schema');\n    Object.assign(joi, this, joi.clone()); // Re-add the types from `this` but also keep the settings from joi's potential new defaults\n\n    joi._defaults = function (schema) {\n      if (_this._defaults) {\n        schema = _this._defaults(schema);\n        Hoek.assert(schema instanceof _this.constructor, 'defaults() must return a schema');\n      }\n\n      schema = fn(schema);\n      Hoek.assert(schema instanceof _this.constructor, 'defaults() must return a schema');\n      return schema;\n    };\n\n    return joi;\n  };\n\n  root.bind = function () {\n    var joi = Object.create(this);\n\n    joi._binds.forEach(function (bind) {\n      joi[bind] = joi[bind].bind(joi);\n    });\n\n    return joi;\n  };\n\n  root.extend = function () {\n    var _this2 = this;\n\n    for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n      args[_key13] = arguments[_key13];\n    }\n\n    var extensions = Hoek.flatten(args);\n    Hoek.assert(extensions.length > 0, 'You need to provide at least one extension');\n    this.assert(extensions, root.extensionsSchema);\n    var joi = Object.create(this.any());\n    Object.assign(joi, this);\n    joi._currentJoi = joi;\n    joi._binds = new Set(joi._binds);\n\n    var _loop = function _loop(i) {\n      var extension = extensions[i];\n\n      if (typeof extension === 'function') {\n        extension = extension(joi);\n      }\n\n      _this2.assert(extension, root.extensionSchema);\n\n      var base = (extension.base || _this2.any()).clone(); // Cloning because we're going to override language afterwards\n\n\n      var ctor = base.constructor;\n\n      var type = /*#__PURE__*/function (_ctor) {\n        _inherits(type, _ctor);\n\n        // eslint-disable-line no-loop-func\n        function type() {\n          var _this3;\n\n          _classCallCheck(this, type);\n\n          _this3 = _possibleConstructorReturn(this, _getPrototypeOf(type).call(this));\n\n          if (extension.base) {\n            Object.assign(_assertThisInitialized(_this3), base);\n          }\n\n          _this3._type = extension.name;\n\n          if (extension.language) {\n            _this3._settings = Settings.concat(_this3._settings, {\n              language: _defineProperty({}, extension.name, extension.language)\n            });\n          }\n\n          return _this3;\n        }\n\n        return type;\n      }(ctor);\n\n      if (extension.coerce) {\n        type.prototype._coerce = function (value, state, options) {\n          if (ctor.prototype._coerce) {\n            var baseRet = ctor.prototype._coerce.call(this, value, state, options);\n\n            if (baseRet.errors) {\n              return baseRet;\n            }\n\n            value = baseRet.value;\n          }\n\n          var ret = extension.coerce.call(this, value, state, options);\n\n          if (ret instanceof Errors.Err) {\n            return {\n              value: value,\n              errors: ret\n            };\n          }\n\n          return {\n            value: ret\n          };\n        };\n      }\n\n      if (extension.pre) {\n        type.prototype._base = function (value, state, options) {\n          if (ctor.prototype._base) {\n            var baseRet = ctor.prototype._base.call(this, value, state, options);\n\n            if (baseRet.errors) {\n              return baseRet;\n            }\n\n            value = baseRet.value;\n          }\n\n          var ret = extension.pre.call(this, value, state, options);\n\n          if (ret instanceof Errors.Err) {\n            return {\n              value: value,\n              errors: ret\n            };\n          }\n\n          return {\n            value: ret\n          };\n        };\n      }\n\n      if (extension.rules) {\n        var _loop2 = function _loop2(j) {\n          var rule = extension.rules[j];\n          var ruleArgs = rule.params ? rule.params instanceof Any ? rule.params._inner.children.map(function (k) {\n            return k.key;\n          }) : Object.keys(rule.params) : [];\n          var validateArgs = rule.params ? Cast.schema(_this2, rule.params) : null;\n\n          type.prototype[rule.name] = function () {\n            for (var _len14 = arguments.length, rArgs = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n              rArgs[_key14] = arguments[_key14];\n            }\n\n            // eslint-disable-line no-loop-func\n            if (rArgs.length > ruleArgs.length) {\n              throw new Error('Unexpected number of arguments');\n            }\n\n            var hasRef = false;\n            var arg = {};\n\n            for (var k = 0; k < ruleArgs.length; ++k) {\n              arg[ruleArgs[k]] = rArgs[k];\n\n              if (!hasRef && Ref.isRef(rArgs[k])) {\n                hasRef = true;\n              }\n            }\n\n            if (validateArgs) {\n              arg = joi.attempt(arg, validateArgs);\n            }\n\n            var schema;\n\n            if (rule.validate) {\n              var validate = function validate(value, state, options) {\n                return rule.validate.call(this, arg, value, state, options);\n              };\n\n              schema = this._test(rule.name, arg, validate, {\n                description: rule.description,\n                hasRef: hasRef\n              });\n            } else {\n              schema = this.clone();\n            }\n\n            if (rule.setup) {\n              var newSchema = rule.setup.call(schema, arg);\n\n              if (newSchema !== undefined) {\n                Hoek.assert(newSchema instanceof Any, \"Setup of extension Joi.\".concat(this._type, \"().\").concat(rule.name, \"() must return undefined or a Joi object\"));\n                schema = newSchema;\n              }\n            }\n\n            return schema;\n          };\n        };\n\n        for (var j = 0; j < extension.rules.length; ++j) {\n          _loop2(j);\n        }\n      }\n\n      if (extension.describe) {\n        type.prototype.describe = function () {\n          var description = ctor.prototype.describe.call(this);\n          return extension.describe.call(this, description);\n        };\n      }\n\n      var instance = new type();\n\n      joi[extension.name] = function () {\n        for (var _len15 = arguments.length, extArgs = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n          extArgs[_key15] = arguments[_key15];\n        }\n\n        return internals.callWithDefaults.call(this, instance, extArgs);\n      };\n\n      joi._binds.add(extension.name);\n    };\n\n    for (var i = 0; i < extensions.length; ++i) {\n      _loop(i);\n    }\n\n    return joi;\n  };\n\n  root.extensionSchema = internals.object.keys({\n    base: internals.object.type(Any, 'Joi object'),\n    name: internals.string.required(),\n    coerce: internals.func.arity(3),\n    pre: internals.func.arity(3),\n    language: internals.object,\n    describe: internals.func.arity(1),\n    rules: internals.array.items(internals.object.keys({\n      name: internals.string.required(),\n      setup: internals.func.arity(1),\n      validate: internals.func.arity(4),\n      params: [internals.object.pattern(/.*/, internals.object.type(Any, 'Joi object')), internals.object.type(internals.object.constructor, 'Joi object')],\n      description: [internals.string, internals.func.arity(1)]\n    }).or('setup', 'validate'))\n  }).strict();\n  root.extensionsSchema = internals.array.items([internals.object, internals.func.arity(1)]).strict();\n  root.version = require('../package.json').version;\n  return root;\n};\n\nmodule.exports = internals.root();","map":{"version":3,"sources":["/home/coeus/Desktop/React/movie-list/node_modules/joi/lib/index.js"],"names":["Hoek","require","Any","Cast","Errors","Lazy","Ref","Settings","internals","alternatives","array","boolean","binary","date","func","number","object","string","symbol","callWithDefaults","schema","args","assert","_defaults","_currentJoi","_init","root","any","clone","prototype","_binds","Set","length","call","alt","bool","ref","create","isRef","validate","value","last","callback","count","options","undefined","compile","_validateWithOptions","describe","err","hasOwnProperty","message","path","attempt","result","error","annotate","Error","reach","Array","isArray","sourceSchema","schemaPath","children","_inner","key","shift","i","child","split","slice","lazy","defaults","fn","joi","Object","constructor","assign","bind","forEach","extend","extensions","flatten","extensionsSchema","extension","extensionSchema","base","ctor","type","_type","name","language","_settings","concat","coerce","_coerce","state","baseRet","errors","ret","Err","pre","_base","rules","j","rule","ruleArgs","params","map","k","keys","validateArgs","rArgs","hasRef","arg","_test","description","setup","newSchema","instance","extArgs","add","required","arity","items","pattern","or","strict","version","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Any = require('./types/any');\nconst Cast = require('./cast');\nconst Errors = require('./errors');\nconst Lazy = require('./types/lazy');\nconst Ref = require('./ref');\nconst Settings = require('./types/any/settings');\n\n\n// Declare internals\n\nconst internals = {\n    alternatives: require('./types/alternatives'),\n    array: require('./types/array'),\n    boolean: require('./types/boolean'),\n    binary: require('./types/binary'),\n    date: require('./types/date'),\n    func: require('./types/func'),\n    number: require('./types/number'),\n    object: require('./types/object'),\n    string: require('./types/string'),\n    symbol: require('./types/symbol')\n};\n\ninternals.callWithDefaults = function (schema, args) {\n\n    Hoek.assert(this, 'Must be invoked on a Joi instance.');\n\n    if (this._defaults) {\n        schema = this._defaults(schema);\n    }\n\n    schema._currentJoi = this;\n\n    return schema._init(...args);\n};\n\ninternals.root = function () {\n\n    const any = new Any();\n\n    const root = any.clone();\n    Any.prototype._currentJoi = root;\n    root._currentJoi = root;\n    root._binds = new Set(['any', 'alternatives', 'alt', 'array', 'boolean', 'binary', 'date', 'func', 'number', 'object', 'string', 'symbol', 'validate', 'describe', 'compile', 'assert', 'attempt', 'lazy', 'defaults', 'extend', 'allow', 'valid', 'only', 'equal', 'invalid', 'disallow', 'not', 'required', 'exist', 'optional', 'forbidden', 'strip', 'when', 'empty', 'default']);\n\n    root.any = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.any() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, any, args);\n    };\n\n    root.alternatives = root.alt = function (...args) {\n\n        return internals.callWithDefaults.call(this, internals.alternatives, args);\n    };\n\n    root.array = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.array() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.array, args);\n    };\n\n    root.boolean = root.bool = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.boolean() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.boolean, args);\n    };\n\n    root.binary = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.binary() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.binary, args);\n    };\n\n    root.date = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.date() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.date, args);\n    };\n\n    root.func = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.func() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.func, args);\n    };\n\n    root.number = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.number() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.number, args);\n    };\n\n    root.object = function (...args) {\n\n        return internals.callWithDefaults.call(this, internals.object, args);\n    };\n\n    root.string = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.string() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.string, args);\n    };\n\n    root.symbol = function (...args) {\n\n        Hoek.assert(args.length === 0, 'Joi.symbol() does not allow arguments.');\n\n        return internals.callWithDefaults.call(this, internals.symbol, args);\n    };\n\n    root.ref = function (...args) {\n\n        return Ref.create(...args);\n    };\n\n    root.isRef = function (ref) {\n\n        return Ref.isRef(ref);\n    };\n\n    root.validate = function (value, ...args /*, [schema], [options], callback */) {\n\n        const last = args[args.length - 1];\n        const callback = typeof last === 'function' ? last : null;\n\n        const count = args.length - (callback ? 1 : 0);\n        if (count === 0) {\n            return any.validate(value, callback);\n        }\n\n        const options = count === 2 ? args[1] : undefined;\n        const schema = this.compile(args[0]);\n\n        return schema._validateWithOptions(value, options, callback);\n    };\n\n    root.describe = function (...args) {\n\n        const schema = args.length ? this.compile(args[0]) : any;\n        return schema.describe();\n    };\n\n    root.compile = function (schema) {\n\n        try {\n            return Cast.schema(this, schema);\n        }\n        catch (err) {\n            if (err.hasOwnProperty('path')) {\n                err.message = err.message + '(' + err.path + ')';\n            }\n\n            throw err;\n        }\n    };\n\n    root.assert = function (value, schema, message) {\n\n        this.attempt(value, schema, message);\n    };\n\n    root.attempt = function (value, schema, message) {\n\n        const result = this.validate(value, schema);\n        const error = result.error;\n        if (error) {\n            if (!message) {\n                if (typeof error.annotate === 'function') {\n                    error.message = error.annotate();\n                }\n\n                throw error;\n            }\n\n            if (!(message instanceof Error)) {\n                if (typeof error.annotate === 'function') {\n                    error.message = `${message} ${error.annotate()}`;\n                }\n\n                throw error;\n            }\n\n            throw message;\n        }\n\n        return result.value;\n    };\n\n    root.reach = function (schema, path) {\n\n        Hoek.assert(schema && schema instanceof Any, 'you must provide a joi schema');\n        Hoek.assert(Array.isArray(path) || typeof path === 'string', 'path must be a string or an array of strings');\n\n        const reach = (sourceSchema, schemaPath) => {\n\n            if (!schemaPath.length) {\n                return sourceSchema;\n            }\n\n            const children = sourceSchema._inner.children;\n            if (!children) {\n                return;\n            }\n\n            const key = schemaPath.shift();\n            for (let i = 0; i < children.length; ++i) {\n                const child = children[i];\n                if (child.key === key) {\n                    return reach(child.schema, schemaPath);\n                }\n            }\n        };\n\n        const schemaPath = typeof path === 'string' ? (path ? path.split('.') : []) : path.slice();\n\n        return reach(schema, schemaPath);\n    };\n\n    root.lazy = function (...args) {\n\n        return internals.callWithDefaults.call(this, Lazy, args);\n    };\n\n    root.defaults = function (fn) {\n\n        Hoek.assert(typeof fn === 'function', 'Defaults must be a function');\n\n        let joi = Object.create(this.any());\n        joi = fn(joi);\n\n        Hoek.assert(joi && joi instanceof this.constructor, 'defaults() must return a schema');\n\n        Object.assign(joi, this, joi.clone()); // Re-add the types from `this` but also keep the settings from joi's potential new defaults\n\n        joi._defaults = (schema) => {\n\n            if (this._defaults) {\n                schema = this._defaults(schema);\n                Hoek.assert(schema instanceof this.constructor, 'defaults() must return a schema');\n            }\n\n            schema = fn(schema);\n            Hoek.assert(schema instanceof this.constructor, 'defaults() must return a schema');\n            return schema;\n        };\n\n        return joi;\n    };\n\n    root.bind = function () {\n\n        const joi = Object.create(this);\n\n        joi._binds.forEach((bind) => {\n\n            joi[bind] = joi[bind].bind(joi);\n        });\n\n        return joi;\n    };\n\n    root.extend = function (...args) {\n\n        const extensions = Hoek.flatten(args);\n        Hoek.assert(extensions.length > 0, 'You need to provide at least one extension');\n\n        this.assert(extensions, root.extensionsSchema);\n\n        const joi = Object.create(this.any());\n        Object.assign(joi, this);\n        joi._currentJoi = joi;\n        joi._binds = new Set(joi._binds);\n\n        for (let i = 0; i < extensions.length; ++i) {\n            let extension = extensions[i];\n\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, root.extensionSchema);\n\n            const base = (extension.base || this.any()).clone(); // Cloning because we're going to override language afterwards\n            const ctor = base.constructor;\n            const type = class extends ctor { // eslint-disable-line no-loop-func\n\n                constructor() {\n\n                    super();\n                    if (extension.base) {\n                        Object.assign(this, base);\n                    }\n\n                    this._type = extension.name;\n\n                    if (extension.language) {\n                        this._settings = Settings.concat(this._settings, {\n                            language: {\n                                [extension.name]: extension.language\n                            }\n                        });\n                    }\n                }\n\n            };\n\n            if (extension.coerce) {\n                type.prototype._coerce = function (value, state, options) {\n\n                    if (ctor.prototype._coerce) {\n                        const baseRet = ctor.prototype._coerce.call(this, value, state, options);\n\n                        if (baseRet.errors) {\n                            return baseRet;\n                        }\n\n                        value = baseRet.value;\n                    }\n\n                    const ret = extension.coerce.call(this, value, state, options);\n                    if (ret instanceof Errors.Err) {\n                        return { value, errors: ret };\n                    }\n\n                    return { value: ret };\n                };\n            }\n\n            if (extension.pre) {\n                type.prototype._base = function (value, state, options) {\n\n                    if (ctor.prototype._base) {\n                        const baseRet = ctor.prototype._base.call(this, value, state, options);\n\n                        if (baseRet.errors) {\n                            return baseRet;\n                        }\n\n                        value = baseRet.value;\n                    }\n\n                    const ret = extension.pre.call(this, value, state, options);\n                    if (ret instanceof Errors.Err) {\n                        return { value, errors: ret };\n                    }\n\n                    return { value: ret };\n                };\n            }\n\n            if (extension.rules) {\n                for (let j = 0; j < extension.rules.length; ++j) {\n                    const rule = extension.rules[j];\n                    const ruleArgs = rule.params ?\n                        (rule.params instanceof Any ? rule.params._inner.children.map((k) => k.key) : Object.keys(rule.params)) :\n                        [];\n                    const validateArgs = rule.params ? Cast.schema(this, rule.params) : null;\n\n                    type.prototype[rule.name] = function (...rArgs) { // eslint-disable-line no-loop-func\n\n                        if (rArgs.length > ruleArgs.length) {\n                            throw new Error('Unexpected number of arguments');\n                        }\n\n                        let hasRef = false;\n                        let arg = {};\n\n                        for (let k = 0; k < ruleArgs.length; ++k) {\n                            arg[ruleArgs[k]] = rArgs[k];\n                            if (!hasRef && Ref.isRef(rArgs[k])) {\n                                hasRef = true;\n                            }\n                        }\n\n                        if (validateArgs) {\n                            arg = joi.attempt(arg, validateArgs);\n                        }\n\n                        let schema;\n                        if (rule.validate) {\n                            const validate = function (value, state, options) {\n\n                                return rule.validate.call(this, arg, value, state, options);\n                            };\n\n                            schema = this._test(rule.name, arg, validate, {\n                                description: rule.description,\n                                hasRef\n                            });\n                        }\n                        else {\n                            schema = this.clone();\n                        }\n\n                        if (rule.setup) {\n                            const newSchema = rule.setup.call(schema, arg);\n                            if (newSchema !== undefined) {\n                                Hoek.assert(newSchema instanceof Any, `Setup of extension Joi.${this._type}().${rule.name}() must return undefined or a Joi object`);\n                                schema = newSchema;\n                            }\n                        }\n\n                        return schema;\n                    };\n                }\n            }\n\n            if (extension.describe) {\n                type.prototype.describe = function () {\n\n                    const description = ctor.prototype.describe.call(this);\n                    return extension.describe.call(this, description);\n                };\n            }\n\n            const instance = new type();\n            joi[extension.name] = function (...extArgs) {\n\n                return internals.callWithDefaults.call(this, instance, extArgs);\n            };\n\n            joi._binds.add(extension.name);\n        }\n\n        return joi;\n    };\n\n    root.extensionSchema = internals.object.keys({\n        base: internals.object.type(Any, 'Joi object'),\n        name: internals.string.required(),\n        coerce: internals.func.arity(3),\n        pre: internals.func.arity(3),\n        language: internals.object,\n        describe: internals.func.arity(1),\n        rules: internals.array.items(internals.object.keys({\n            name: internals.string.required(),\n            setup: internals.func.arity(1),\n            validate: internals.func.arity(4),\n            params: [\n                internals.object.pattern(/.*/, internals.object.type(Any, 'Joi object')),\n                internals.object.type(internals.object.constructor, 'Joi object')\n            ],\n            description: [internals.string, internals.func.arity(1)]\n        }).or('setup', 'validate'))\n    }).strict();\n\n    root.extensionsSchema = internals.array.items([internals.object, internals.func.arity(1)]).strict();\n\n    root.version = require('../package.json').version;\n\n    return root;\n};\n\n\nmodule.exports = internals.root();\n"]},"metadata":{},"sourceType":"script"}