{"ast":null,"code":"var _jsxFileName = \"/home/coeus/Desktop/React/movie-list/src/components/MovieList.jsx\";\nimport React, { Component } from 'react';\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from '../services/fakeGenreService';\nimport Pagination from \"../common/Pagination\";\nimport { Paginate } from '../helpers/Paginate';\nimport ListGroup from '../common/ListGroup';\nimport MoviesTable from '../common/MoviesTable';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      pageSize: 4,\n      sortColumn: {\n        path: 'title',\n        order: 'asc'\n      },\n      selectedGenre: '',\n      currentPage: 1\n    };\n\n    this.handleDelete = id => {\n      let movies = this.state.movies.filter(movie => movie._id !== id);\n      this.setState({\n        movies: movies\n      });\n    };\n\n    this.handleLikeMovie = movie => {\n      let movies = [...this.state.movies];\n      let new_movie = { ...movie\n      };\n      const index = movies.indexOf(movie);\n      movies[index] = new_movie;\n      movies[index].like = !movies[index].like;\n      this.setState({\n        movies: movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreChange = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      _id: '',\n      name: 'All Genre'\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres: genres\n    });\n  }\n\n  pageData() {\n    let {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      selectedGenre,\n      sortColumn\n    } = this.state; //if any genre selected then filter the movie according to that genre\n\n    let filteredMovies = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies; //after filter sort the movies\n\n    const sortedMovies = _.orderBy(filteredMovies, [sortColumn.path], [sortColumn.order]);\n\n    const movies = Paginate(sortedMovies, currentPage, pageSize);\n    return {\n      data: movies,\n      totalCount: allMovies.length\n    };\n  }\n\n  render() {\n    //some object destructuring\n    let {\n      length: count\n    } = this.state.movies;\n    let {\n      pageSize,\n      currentPage,\n      sortColumn\n    } = this.state;\n    let {\n      totalCount,\n      data: movies\n    } = this.pageData();\n    if (count === 0) return React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"No movie found\");\n    return React.createElement(\"main\", {\n      role: \"main\",\n      className: \"container\",\n      style: {\n        padding: 23\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      genres: this.state.genres,\n      selectedGenre: this.state.selectedGenre,\n      onGenreChange: this.handleGenreChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, totalCount, \" movies found \"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"search...\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/movies/create\",\n      className: \"btn btn-success btn-sm pull-right\",\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Create\"))), React.createElement(MoviesTable, {\n      movies: movies,\n      sortColumn: sortColumn,\n      onLike: this.handleLikeMovie,\n      onDelete: this.handleDelete,\n      onSort: this.handleSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      itemsCount: totalCount,\n      pageSize: pageSize,\n      currentPage: currentPage,\n      onPageChange: this.handlePageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/home/coeus/Desktop/React/movie-list/src/components/MovieList.jsx"],"names":["React","Component","getMovies","getGenres","Pagination","Paginate","ListGroup","MoviesTable","_","Link","Movies","state","movies","genres","pageSize","sortColumn","path","order","selectedGenre","currentPage","handleDelete","id","filter","movie","_id","setState","handleLikeMovie","new_movie","index","indexOf","like","handlePageChange","page","handleGenreChange","genre","handleSort","componentDidMount","name","pageData","allMovies","filteredMovies","m","sortedMovies","orderBy","data","totalCount","length","render","count","fontWeight","textAlign","padding","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from '../services/fakeGenreService';\nimport Pagination from \"../common/Pagination\";\nimport {Paginate} from '../helpers/Paginate';\nimport ListGroup from '../common/ListGroup';\nimport MoviesTable from '../common/MoviesTable';\nimport _ from 'lodash';\nimport {Link} from 'react-router-dom';\n\nclass Movies extends Component {\n    state = { \n        movies: [],\n        genres: [],\n        pageSize: 4,\n        sortColumn: {path: 'title', order: 'asc'},\n        selectedGenre: '',\n        currentPage: 1\n     }\n\n    componentDidMount(){\n        const genres = [ {_id: '', name: 'All Genre'}, ...getGenres()]\n        this.setState({\n            movies: getMovies(),\n            genres: genres,\n        });\n    } \n\n    handleDelete = (id) => {\n        let movies = this.state.movies.filter( movie => movie._id !== id)\n        this.setState({\n            movies: movies\n        });\n    }\n\n    handleLikeMovie = (movie) => {\n        let movies = [...this.state.movies];\n        let new_movie = {...movie};\n        const index = movies.indexOf(movie);\n        movies[index] = new_movie;\n        movies[index].like = !(movies[index].like);\n        this.setState({\n            movies: movies\n        })\n    }\n\n    handlePageChange = (page) => {\n        this.setState({\n            currentPage: page\n        })\n    }\n\n    handleGenreChange = (genre) => {\n        this.setState({\n            selectedGenre: genre,\n            currentPage: 1\n        })\n    }\n\n    handleSort = (sortColumn) => {\n        this.setState({\n            sortColumn\n        })\n    }\n\n    pageData() {\n        let {pageSize, currentPage, movies:allMovies, selectedGenre, sortColumn} = this.state\n\n        //if any genre selected then filter the movie according to that genre\n        let filteredMovies = selectedGenre && selectedGenre._id \n        ? allMovies.filter( m => m.genre._id === selectedGenre._id ) \n        : allMovies;\n        //after filter sort the movies\n        const sortedMovies = _.orderBy(filteredMovies, [sortColumn.path], [sortColumn.order])\n\n        const movies = Paginate(sortedMovies, currentPage, pageSize);\n\n        return {\n            data: movies,\n            totalCount: allMovies.length\n        }\n    }\n\n    render() { \n        //some object destructuring\n        let {length: count} = this.state.movies\n        let {pageSize, currentPage, sortColumn} = this.state\n        \n        let {totalCount, data: movies} = this.pageData();\n\n        if(count === 0)\n            return <p style={{fontWeight: 'bold', textAlign: 'center'}}>No movie found</p>    \n        return (     \n        <main role=\"main\" className=\"container\" style={{padding: 23}}>\n            <div className=\"row\">\n                <div className=\"col-2\">\n                    <ListGroup \n                        genres={ this.state.genres } \n                        selectedGenre={ this.state.selectedGenre } \n                        onGenreChange={ this.handleGenreChange }\n                    />\n                </div>\n\n                <div className=\"col\">\n                    <p style={{fontWeight: 'bold', textAlign: 'center'}}>{ totalCount } movies found </p>\n                    <div className=\"row\">\n                        <div className=\"col-md-10\">\n                            <input type=\"text\" placeholder=\"search...\" className=\"form-control\"/>\n                        </div>\n                        <div className=\"col-md-2\">\n                            <Link to=\"/movies/create\" className=\"btn btn-success btn-sm pull-right\" style={{ marginBottom: 10}}>Create</Link>\n                        </div>\n                    </div>\n\n                    <MoviesTable \n                        movies={ movies } \n                        sortColumn={ sortColumn }\n                        onLike={ this.handleLikeMovie } \n                        onDelete={ this.handleDelete }\n                        onSort={ this.handleSort}\n                    />\n\n                    <Pagination \n                        itemsCount={ totalCount } \n                        pageSize={ pageSize } \n                        currentPage={ currentPage } \n                        onPageChange={ this.handlePageChange }\n                    />\n                </div>\n            </div>\n           \n        </main>\n      );\n    }\n}\n \nexport default Movies;"]},"metadata":{},"sourceType":"module"}