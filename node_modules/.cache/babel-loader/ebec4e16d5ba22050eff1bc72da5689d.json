{"ast":null,"code":"var _jsxFileName = \"/home/coeus/Desktop/My-First-React-Application/src/components/MovieList.jsx\";\nimport React, { Component } from 'react';\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from '../services/fakeGenreService';\nimport Pagination from \"../common/Pagination\";\nimport { Paginate } from '../helpers/Paginate';\nimport ListGroup from '../common/ListGroup';\nimport MoviesTable from '../common/MoviesTable';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport SearchBox from '../common/SearchBox';\nimport axios from 'axios';\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      pageSize: 4,\n      sortColumn: {\n        path: 'title',\n        order: 'asc'\n      },\n      selectedGenre: '',\n      querySearch: '',\n      currentPage: 1\n    };\n\n    this.handleDelete = id => {\n      let movies = this.state.movies.filter(movie => movie._id !== id);\n      this.setState({\n        movies: movies\n      });\n    };\n\n    this.handleLikeMovie = movie => {\n      let movies = [...this.state.movies];\n      let new_movie = { ...movie\n      };\n      const index = movies.indexOf(movie);\n      movies[index] = new_movie;\n      movies[index].like = !movies[index].like;\n      this.setState({\n        movies: movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreChange = genre => {\n      this.setState({\n        selectedGenre: genre,\n        querySearch: '',\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.handleSearch = query => {\n      this.setState({\n        querySearch: query,\n        currentPage: 1,\n        selectGenre: ''\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data\n    } = await axios.get('http://127.0.0.1:8000/api/genres');\n    const genres = [{\n      id: '',\n      name: 'All Genre'\n    }, ...data];\n    this.setState({\n      movies: getMovies(),\n      genres: genres\n    });\n  }\n\n  pageData() {\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      selectedGenre,\n      sortColumn,\n      querySearch\n    } = this.state;\n    let filtered = allMovies;\n\n    if (querySearch) {\n      filtered = allMovies.filter(movie => movie.title.toLowerCase().startsWith(querySearch.toLowerCase()));\n    } else if (selectedGenre && selectedGenre._id) {\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n    } //after filter sort the movies\n\n\n    const sortedMovies = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = Paginate(sortedMovies, currentPage, pageSize);\n    return {\n      data: movies,\n      totalCount: filtered.length\n    };\n  }\n\n  render() {\n    //some object destructuring\n    let {\n      length: count\n    } = this.state.movies;\n    let {\n      pageSize,\n      currentPage,\n      sortColumn,\n      querySearch\n    } = this.state;\n    let {\n      totalCount,\n      data: movies\n    } = this.pageData();\n    if (count === 0) return React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"No movie found\");\n    return React.createElement(\"main\", {\n      role: \"main\",\n      className: \"container\",\n      style: {\n        padding: 23\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      genres: this.state.genres,\n      selectedGenre: this.state.selectedGenre,\n      onGenreChange: this.handleGenreChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, totalCount, \" movies found \"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(SearchBox, {\n      value: querySearch,\n      onChange: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/movies/create\",\n      className: \"btn btn-success btn-sm pull-right\",\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Create\"))), React.createElement(MoviesTable, {\n      movies: movies,\n      sortColumn: sortColumn,\n      onLike: this.handleLikeMovie,\n      onDelete: this.handleDelete,\n      onSort: this.handleSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      itemsCount: totalCount,\n      pageSize: pageSize,\n      currentPage: currentPage,\n      onPageChange: this.handlePageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/home/coeus/Desktop/My-First-React-Application/src/components/MovieList.jsx"],"names":["React","Component","getMovies","getGenres","Pagination","Paginate","ListGroup","MoviesTable","_","Link","SearchBox","axios","Movies","state","movies","genres","pageSize","sortColumn","path","order","selectedGenre","querySearch","currentPage","handleDelete","id","filter","movie","_id","setState","handleLikeMovie","new_movie","index","indexOf","like","handlePageChange","page","handleGenreChange","genre","handleSort","handleSearch","query","selectGenre","componentDidMount","data","get","name","pageData","allMovies","filtered","title","toLowerCase","startsWith","m","sortedMovies","orderBy","totalCount","length","render","count","fontWeight","textAlign","padding","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from '../services/fakeGenreService';\nimport Pagination from \"../common/Pagination\";\nimport {Paginate} from '../helpers/Paginate';\nimport ListGroup from '../common/ListGroup';\nimport MoviesTable from '../common/MoviesTable';\nimport _ from 'lodash';\nimport {Link} from 'react-router-dom';\nimport SearchBox from '../common/SearchBox';\nimport axios from 'axios';\n\nclass Movies extends Component {\n    state = { \n        movies: [],\n        genres: [],\n        pageSize: 4,\n        sortColumn: {path: 'title', order: 'asc'},\n        selectedGenre: '',\n        querySearch: '',\n        currentPage: 1\n     }\n\n    async componentDidMount(){\n        const { data } = await axios.get('http://127.0.0.1:8000/api/genres');\n        \n         const genres = [ {id: '', name: 'All Genre'}, ...data]\n        this.setState({\n            movies: getMovies(),\n            genres: genres,\n        });\n    } \n\n    handleDelete = (id) => {\n        let movies = this.state.movies.filter( movie => movie._id !== id)\n        this.setState({\n            movies: movies\n        });\n    }\n\n    handleLikeMovie = (movie) => {\n        let movies = [...this.state.movies];\n        let new_movie = {...movie};\n        const index = movies.indexOf(movie);\n        movies[index] = new_movie;\n        movies[index].like = !(movies[index].like);\n        this.setState({\n            movies: movies\n        })\n    }\n\n    handlePageChange = (page) => {\n        this.setState({\n            currentPage: page\n        })\n    }\n\n    handleGenreChange = (genre) => {\n        this.setState({\n            selectedGenre: genre,\n            querySearch: '',\n            currentPage: 1\n        })\n    }\n\n    handleSort = (sortColumn) => {\n        this.setState({\n            sortColumn\n        });\n    }\n\n    handleSearch = (query) => {\n        this.setState({\n            querySearch: query,\n            currentPage: 1,\n            selectGenre: ''\n        });\n    }\n\n    pageData() {\n        const {pageSize, currentPage, movies:allMovies, selectedGenre, sortColumn, querySearch} = this.state\n        let filtered = allMovies;\n\n        if(querySearch){\n            filtered = allMovies.filter( movie => movie.title.toLowerCase().startsWith(querySearch.toLowerCase()))\n        }else if(selectedGenre && selectedGenre._id){\n             filtered = allMovies.filter( m => m.genre._id === selectedGenre._id )\n        }\n        \n        //after filter sort the movies\n        const sortedMovies = _.orderBy(filtered, [sortColumn.path], [sortColumn.order])\n\n        const movies = Paginate(sortedMovies, currentPage, pageSize);\n\n        return {\n            data: movies,\n            totalCount: filtered.length\n        }\n    }\n\n    render() { \n        //some object destructuring\n        let {length: count} = this.state.movies\n        let {pageSize, currentPage, sortColumn, querySearch } = this.state\n        \n        let {totalCount, data: movies} = this.pageData();\n\n        if(count === 0)\n            return <p style={{fontWeight: 'bold', textAlign: 'center'}}>No movie found</p>    \n        return (     \n        <main role=\"main\" className=\"container\" style={{padding: 23}}>\n            <div className=\"row\">\n                <div className=\"col-2\">\n                    <ListGroup \n                        genres={ this.state.genres } \n                        selectedGenre={ this.state.selectedGenre } \n                        onGenreChange={ this.handleGenreChange }\n                    />\n                </div>\n\n                <div className=\"col\">\n                    <p style={{fontWeight: 'bold', textAlign: 'center'}}>{ totalCount } movies found </p>\n                    <div className=\"row\">\n                        <div className=\"col-md-10\">\n                            <SearchBox \n                                value={ querySearch } \n                                onChange={ this.handleSearch } \n                            />\n                        </div>\n                        <div className=\"col-md-2\">\n                            <Link \n                                to=\"/movies/create\" \n                                className=\"btn btn-success btn-sm pull-right\" \n                                style={{ marginBottom: 10}}>\n                                    Create\n                            </Link>\n                        </div>\n                    </div>\n\n                    <MoviesTable \n                        movies={ movies } \n                        sortColumn={ sortColumn }\n                        onLike={ this.handleLikeMovie } \n                        onDelete={ this.handleDelete }\n                        onSort={ this.handleSort}\n                    />\n\n                    <Pagination \n                        itemsCount={ totalCount } \n                        pageSize={ pageSize } \n                        currentPage={ currentPage } \n                        onPageChange={ this.handlePageChange }\n                    />\n                </div>\n            </div>\n           \n        </main>\n      );\n    }\n}\n \nexport default Movies;"]},"metadata":{},"sourceType":"module"}