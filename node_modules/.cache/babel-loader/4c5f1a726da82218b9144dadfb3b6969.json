{"ast":null,"code":"var _jsxFileName = \"/home/coeus/Desktop/React/movie-list/src/components/MovieList.jsx\";\nimport React, { Component } from 'react';\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from '../services/fakeGenreService';\nimport Like from \"../common/Like\";\nimport Pagination from \"../common/Pagination\";\nimport { Paginate } from '../helpers/Paginate';\nimport ListGroup from '../common/ListGroup';\nimport MoviesTable from '../common/MoviesTable';\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      pageSize: 4,\n      selectedGenre: '',\n      currentPage: 1\n    };\n\n    this.handleDelete = id => {\n      console.log(id);\n      let movies = this.state.movies.filter(movie => movie._id != id);\n      this.setState({\n        movies: movies\n      });\n    };\n\n    this.handleLikeMovie = movie => {\n      let movies = [...this.state.movies];\n      let new_movie = { ...movie\n      };\n      const index = movies.indexOf(movie);\n      movies[index] = new_movie;\n      movies[index].like = !movies[index].like;\n      this.setState({\n        movies: movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreChange = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      name: 'All Genre'\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres: genres\n    });\n  }\n\n  render() {\n    //some object destructuring\n    let {\n      length: count\n    } = this.state.movies;\n    let {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      selectedGenre\n    } = this.state; //if any genre selected then filter the movie according to that genre\n\n    let filteredMovies = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n    const movies = Paginate(filteredMovies, currentPage, pageSize);\n    if (count === 0) return React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"No movie found\");\n    return React.createElement(\"main\", {\n      role: \"main\",\n      className: \"container\",\n      style: {\n        padding: 23\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      genres: this.state.genres,\n      selectedGenre: this.state.selectedGenre,\n      onGenreChange: this.handleGenreChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, filteredMovies.length, \" movies found \"), React.createElement(MoviesTable, {\n      movies: movies,\n      onLike: this.handleLikeMovie,\n      onDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      itemsCount: filteredMovies.length,\n      pageSize: pageSize,\n      currentPage: currentPage,\n      onPageChange: this.handlePageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/home/coeus/Desktop/React/movie-list/src/components/MovieList.jsx"],"names":["React","Component","getMovies","getGenres","Like","Pagination","Paginate","ListGroup","MoviesTable","Movies","state","movies","genres","pageSize","selectedGenre","currentPage","handleDelete","id","console","log","filter","movie","_id","setState","handleLikeMovie","new_movie","index","indexOf","like","handlePageChange","page","handleGenreChange","genre","componentDidMount","name","render","length","count","allMovies","filteredMovies","m","fontWeight","textAlign","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from '../services/fakeGenreService';\nimport Like from \"../common/Like\"\nimport Pagination from \"../common/Pagination\"\nimport {Paginate} from '../helpers/Paginate'\nimport ListGroup from '../common/ListGroup'\nimport MoviesTable from '../common/MoviesTable'\n\nclass Movies extends Component {\n    state = { \n        movies: [],\n        genres: [],\n        pageSize: 4,\n        selectedGenre: '',\n        currentPage: 1\n     }\n\n    componentDidMount(){\n        const genres = [{name: 'All Genre'}, ...getGenres()]\n        this.setState({\n            movies: getMovies(),\n            genres: genres\n        });\n    } \n\n    handleDelete = (id) => {\n        console.log(id);\n        let movies = this.state.movies.filter( movie => movie._id != id)\n        this.setState({\n            movies: movies\n        });\n    }\n\n    handleLikeMovie = (movie) => {\n        let movies = [...this.state.movies];\n        let new_movie = {...movie};\n        const index = movies.indexOf(movie);\n        movies[index] = new_movie;\n        movies[index].like = !(movies[index].like);\n        this.setState({\n            movies: movies\n        })\n    }\n\n    handlePageChange = (page) => {\n        this.setState({\n            currentPage: page\n        })\n    }\n\n    handleGenreChange = (genre) => {\n        this.setState({\n            selectedGenre: genre,\n            currentPage: 1\n        })\n    }\n\n    render() { \n        //some object destructuring\n        let {length: count} = this.state.movies\n        let {pageSize, currentPage, movies:allMovies, selectedGenre} = this.state\n        //if any genre selected then filter the movie according to that genre\n        let filteredMovies = selectedGenre && selectedGenre._id \n            ? allMovies.filter( m => m.genre._id === selectedGenre._id ) \n            : allMovies;\n\n        const movies = Paginate(filteredMovies, currentPage, pageSize);\n    \n        if(count === 0)\n            return <p style={{fontWeight: 'bold', textAlign: 'center'}}>No movie found</p>    \n        return (     \n        <main role=\"main\" className=\"container\" style={{padding: 23}}>\n            <div className=\"row\">\n                <div className=\"col-2\">\n                    <ListGroup \n                        genres={ this.state.genres } \n                        selectedGenre={ this.state.selectedGenre } \n                        onGenreChange={ this.handleGenreChange }\n                    />\n                </div>\n\n                <div className=\"col\">\n                    <p style={{fontWeight: 'bold', textAlign: 'center'}}>{ filteredMovies.length } movies found </p>\n                        \n                        <MoviesTable movies={ movies } onLike={ this.handleLikeMovie } onDelete={ this.handleDelete }/>\n\n                        <Pagination \n                            itemsCount={ filteredMovies.length } \n                            pageSize={ pageSize } \n                            currentPage={ currentPage } \n                            onPageChange={ this.handlePageChange }\n                        />\n                </div>\n            </div>\n           \n        </main>\n      );\n    }\n}\n \nexport default Movies;"]},"metadata":{},"sourceType":"module"}